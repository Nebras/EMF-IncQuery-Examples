package bpmn1

import "http://stp.eclipse.org/bpmn"

pattern MyPattern(P)= {
	Activity(P);
}

@Off pattern loopingActivity(A : Activity)= {
	Activity.looping(A, true);
}

@Constraint(location = "A", message =
"$A.name$ is a bad looping activity", severity = "warning" )
pattern badLoopingActivity(A : Activity)= {
	find loopingActivity(A);
	Activity.name(A, Name);
	check(!(Name as String).startsWith("Loop"));
}

@Constraint(location = "A", message =
"$A.name$ is a lonely activity", severity = "warning" )
pattern lonelyActivity(A : Activity)= {
//	neg find someTypeOfEvent(A);
	neg find hasInOrOut(A);
}


@Off
pattern hasInOrOut(A:Activity)= {
	find inEdge(A); } or {
	find outEdge(A);
}

@Off
pattern inEdge(A: Activity)= {
	find sequenceFlowEdge(SeqEdgeTo, SomeActivity, A);
} or {
	find messageFlowEdge(MessEdgeTo, SomeMessActivity, A);
}
@Off
pattern outEdge(A: Activity)= {
	find sequenceFlowEdge(SeqEdgeFrom, A, OtherActivity);
} or {
	find messageFlowEdge(MessEdgeFrom, A, OtherMessActivity);
}
@Off
pattern sequenceFlowEdge(Flow, Src, Dst)= {
	SequenceEdge(Flow);
	Activity(Src);
	Activity(Dst);
	SequenceEdge.source(Flow, Src);
	SequenceEdge.target(Flow, Dst);
}
@Off
pattern messageFlowEdge(Flow, Src, Dst)= {
	MessagingEdge(Flow);
	Activity(Src);
	Activity(Dst);
	MessagingEdge.source(Flow, Src);
	MessagingEdge.target(Flow, Dst);
}
