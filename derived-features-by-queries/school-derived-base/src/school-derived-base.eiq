import "http:///school-derived.ecore"

@DerivedFeature(feature = "numberOfTeachers", kind = "counter")
@Off
pattern teachers(School : School, Teacher : Teacher) = {
   School.teachers(School,Teacher);
}

pattern coursesOfTeacher(Teacher : Teacher, Course :  Course) = {
   Teacher.courses(Teacher,Course);
}

@DerivedFeature(feature = "teachersWithMostCourses")
@Off
pattern teacherWithMostCourses(School : School, Teacher : Teacher) = {
   find teachers(School,Teacher);
   neg find moreCourses(Teacher);
}

private pattern moreCourses(Teacher : Teacher) = {
	N == count find coursesOfTeacher(Teacher,_Course);
    M == count find coursesOfTeacher(Teacher2,_Course2);
    Teacher(Teacher2);
    Teacher != Teacher2;
    check((N as Integer) < (M as Integer));
}

@DerivedFeature(feature = "lastYear")
@Off
pattern lastYear(School : School, Year : Year) = {
   School.years(School,Year);
   neg find laterYear(Year);
}

private pattern laterYear(Year : Year) = {
	Year.startingDate(Year, Date);
	Year.startingDate(Year2, Date2);
	Year(Year2);
	Year != Year2;
	check((Date as Integer) < (Date2 as Integer));
}